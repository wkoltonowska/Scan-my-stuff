name: Build and deploy Node.js app to Azure Web App - scan-my-stuff-app

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      # --- FRONTEND ---
      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm install

      - name: Build frontend
        working-directory: ./frontend
        run: npm run build

      - name: Copy frontend build to backend/frontend-public
        run: |
          mkdir -p backend/frontend-public
          cp -r frontend/build/* backend/frontend-public/

      # --- BACKEND ---
      - name: Install backend dependencies
        working-directory: ./backend
        run: npm install --production

      - name: Create .env file
        working-directory: ./backend
        run: |
          echo "PORT=8080" >> .env
          echo "NODE_ENV=production" >> .env
          echo "COSMOS_DB_ENDPOINT=${{ secrets.COSMOS_DB_ENDPOINT }}" >> .env
          echo "COSMOS_DB_KEY=${{ secrets.COSMOS_DB_KEY }}" >> .env
          echo "COSMOS_DB_DATABASE=${{ secrets.COSMOS_DB_DATABASE }}" >> .env
          echo "COSMOS_DB_CONTAINER=${{ secrets.COSMOS_DB_CONTAINER }}" >> .env

      # --- PAKOWANIE ---
      - name: Package backend with frontend
        run: |
          mkdir -p release
          cp -r backend/* release/
          cd release && zip -r ../release.zip ./*

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Unzip artifact
        run: unzip release.zip

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_2827832A9C2B4537A3C801ADFC2EAE91 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_D2FBDBB84AE64C899741CE5F755FE34D }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_0772BC6000D541468FC5A5C064CB1CB3 }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'scan-my-stuff-app'
          package: .
