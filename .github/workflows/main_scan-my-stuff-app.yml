name: Build and deploy Node.js app to Azure Web App - scan-my-stuff-app

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      # Kopiowanie frontend (statyczne pliki)
      - name: Copy frontend static files to backend
        run: |
            mkdir -p backend/frontend-public
            cp -r frontend/public/. backend/frontend-public/

      - name: Debug check copied frontend contents
        run: ls -R backend/frontend-public

      # Instalacja zależności backendu
      - name: Install backend dependencies
        working-directory: ./backend
        run: npm install --production

      # Tworzenie pliku .env z sekretami
      - name: Create production .env
        working-directory: ./backend
        run: |
          echo "PORT=8080" >> .env
          echo "NODE_ENV=production" >> .env
          echo "COSMOS_DB_ENDPOINT=${{ secrets.COSMOS_DB_ENDPOINT }}" >> .env
          echo "COSMOS_DB_KEY=${{ secrets.COSMOS_DB_KEY }}" >> .env
          echo "COSMOS_DB_DATABASE=${{ secrets.COSMOS_DB_DATABASE }}" >> .env
          echo "COSMOS_DB_CONTAINER=${{ secrets.COSMOS_DB_CONTAINER }}" >> .env

      # (opcjonalnie) budowanie backendu, jeśli masz skrypt build
      - name: Build backend (optional)
        working-directory: ./backend
        run: npm run build --if-present

      # Przygotowanie paczki do wdrożenia
      - name: Prepare release package
        run: |
          mkdir -p release
          cp -r backend/* release/
          cd release && zip -r ../release.zip ./*

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: Login to Azure
        uses: azure/login@v2
        with:
        client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_2827832A9C2B4537A3C801ADFC2EAE91 }}
        tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_D2FBDBB84AE64C899741CE5F755FE34D }}
        subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_0772BC6000D541468FC5A5C064CB1CB3 }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'scan-my-stuff-app'
          package: .

